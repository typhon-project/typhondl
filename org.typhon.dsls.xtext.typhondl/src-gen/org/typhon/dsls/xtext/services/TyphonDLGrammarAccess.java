/*
 * generated by Xtext 2.15.0
 */
package org.typhon.dsls.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class TyphonDLGrammarAccess extends AbstractGrammarElementFinder {
	
	public class DeploymentModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.DeploymentModel");
		private final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementsTypeParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);
		
		//DeploymentModel:
		//	elements+=Type*;
		@Override public ParserRule getRule() { return rule; }
		
		//elements+=Type*
		public Assignment getElementsAssignment() { return cElementsAssignment; }
		
		//Type
		public RuleCall getElementsTypeParserRuleCall_0() { return cElementsTypeParserRuleCall_0; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPlatformTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDataTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDeploymentParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDBTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cEntityParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Type:
		//	PlatformType | DataType | Deployment | DBType | Entity;
		@Override public ParserRule getRule() { return rule; }
		
		//PlatformType | DataType | Deployment | DBType | Entity
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PlatformType
		public RuleCall getPlatformTypeParserRuleCall_0() { return cPlatformTypeParserRuleCall_0; }
		
		//DataType
		public RuleCall getDataTypeParserRuleCall_1() { return cDataTypeParserRuleCall_1; }
		
		//Deployment
		public RuleCall getDeploymentParserRuleCall_2() { return cDeploymentParserRuleCall_2; }
		
		//DBType
		public RuleCall getDBTypeParserRuleCall_3() { return cDBTypeParserRuleCall_3; }
		
		//Entity
		public RuleCall getEntityParserRuleCall_4() { return cEntityParserRuleCall_4; }
	}
	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.DataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDatatypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//DataType:
		//	'datatype' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'datatype' name=ID
		public Group getGroup() { return cGroup; }
		
		//'datatype'
		public Keyword getDatatypeKeyword_0() { return cDatatypeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class PlatformTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.PlatformType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlatformtypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//PlatformType:
		//	'platformtype' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'platformtype' name=ID
		public Group getGroup() { return cGroup; }
		
		//'platformtype'
		public Keyword getPlatformtypeKeyword_0() { return cPlatformtypeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class DBTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.DBType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDbtypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//DBType:
		//	'dbtype' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'dbtype' name=ID
		public Group getGroup() { return cGroup; }
		
		//'dbtype'
		public Keyword getDbtypeKeyword_0() { return cDbtypeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class DeploymentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.Deployment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPlatformParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cClusterParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cApplicationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cContainerParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cServiceParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Deployment:
		//	Platform | Cluster | Application | Container | Service;
		@Override public ParserRule getRule() { return rule; }
		
		//Platform | Cluster | Application | Container | Service
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Platform
		public RuleCall getPlatformParserRuleCall_0() { return cPlatformParserRuleCall_0; }
		
		//Cluster
		public RuleCall getClusterParserRuleCall_1() { return cClusterParserRuleCall_1; }
		
		//Application
		public RuleCall getApplicationParserRuleCall_2() { return cApplicationParserRuleCall_2; }
		
		//Container
		public RuleCall getContainerParserRuleCall_3() { return cContainerParserRuleCall_3; }
		
		//Service
		public RuleCall getServiceParserRuleCall_4() { return cServiceParserRuleCall_4; }
	}
	public class PlatformElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.Platform");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPlatformAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPlatformKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTypePlatformTypeCrossReference_4_0 = (CrossReference)cTypeAssignment_4.eContents().get(0);
		private final RuleCall cTypePlatformTypeIDTerminalRuleCall_4_0_1 = (RuleCall)cTypePlatformTypeCrossReference_4_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cClustersAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cClustersClusterParserRuleCall_6_0 = (RuleCall)cClustersAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Platform:
		//	{Platform}
		//	'platform' name=ID ':' type=[PlatformType] '{'
		//	//(features+=Feature)*
		//	clusters+=Cluster*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Platform} 'platform' name=ID ':' type=[PlatformType] '{' //(features+=Feature)*
		//clusters+=Cluster* '}'
		public Group getGroup() { return cGroup; }
		
		//{Platform}
		public Action getPlatformAction_0() { return cPlatformAction_0; }
		
		//'platform'
		public Keyword getPlatformKeyword_1() { return cPlatformKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//type=[PlatformType]
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//[PlatformType]
		public CrossReference getTypePlatformTypeCrossReference_4_0() { return cTypePlatformTypeCrossReference_4_0; }
		
		//ID
		public RuleCall getTypePlatformTypeIDTerminalRuleCall_4_0_1() { return cTypePlatformTypeIDTerminalRuleCall_4_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		////(features+=Feature)*
		//clusters+=Cluster*
		public Assignment getClustersAssignment_6() { return cClustersAssignment_6; }
		
		//Cluster
		public RuleCall getClustersClusterParserRuleCall_6_0() { return cClustersClusterParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ClusterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.Cluster");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClusterAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cClusterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cApplicationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cApplicationsApplicationParserRuleCall_4_0 = (RuleCall)cApplicationsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Cluster:
		//	{Cluster}
		//	'cluster' name=ID '{'
		//	//(features+=Feature)*
		//	applications+=Application*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Cluster} 'cluster' name=ID '{' //(features+=Feature)*
		//applications+=Application* '}'
		public Group getGroup() { return cGroup; }
		
		//{Cluster}
		public Action getClusterAction_0() { return cClusterAction_0; }
		
		//'cluster'
		public Keyword getClusterKeyword_1() { return cClusterKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		////(features+=Feature)*
		//applications+=Application*
		public Assignment getApplicationsAssignment_4() { return cApplicationsAssignment_4; }
		
		//Application
		public RuleCall getApplicationsApplicationParserRuleCall_4_0() { return cApplicationsApplicationParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ApplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.Application");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cApplicationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cApplicationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cContainersAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cContainersContainerParserRuleCall_4_0 = (RuleCall)cContainersAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Application:
		//	{Application}
		//	'application' name=ID '{'
		//	containers+=Container*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Application} 'application' name=ID '{' containers+=Container* '}'
		public Group getGroup() { return cGroup; }
		
		//{Application}
		public Action getApplicationAction_0() { return cApplicationAction_0; }
		
		//'application'
		public Keyword getApplicationKeyword_1() { return cApplicationKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//containers+=Container*
		public Assignment getContainersAssignment_4() { return cContainersAssignment_4; }
		
		//Container
		public RuleCall getContainersContainerParserRuleCall_4_0() { return cContainersContainerParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.Container");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContainerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cContainerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cPropertiesAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cPropertiesPropertyParserRuleCall_4_0_0 = (RuleCall)cPropertiesAssignment_4_0.eContents().get(0);
		private final Assignment cFeaturesAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cFeaturesFeatureParserRuleCall_4_1_0 = (RuleCall)cFeaturesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Container:
		//	{Container}
		//	'container' name=ID '{' (properties+=Property | features+=Feature)*
		//	//(services+=Service)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Container} 'container' name=ID '{' (properties+=Property | features+=Feature)* //(services+=Service)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Container}
		public Action getContainerAction_0() { return cContainerAction_0; }
		
		//'container'
		public Keyword getContainerKeyword_1() { return cContainerKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(properties+=Property | features+=Feature)*
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//properties+=Property
		public Assignment getPropertiesAssignment_4_0() { return cPropertiesAssignment_4_0; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_4_0_0() { return cPropertiesPropertyParserRuleCall_4_0_0; }
		
		//features+=Feature
		public Assignment getFeaturesAssignment_4_1() { return cFeaturesAssignment_4_1; }
		
		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_4_1_0() { return cFeaturesFeatureParserRuleCall_4_1_0; }
		
		////(services+=Service)*
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.Service");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDBServiceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBusinessServiceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Service:
		//	DBService | BusinessService;
		@Override public ParserRule getRule() { return rule; }
		
		//DBService | BusinessService
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DBService
		public RuleCall getDBServiceParserRuleCall_0() { return cDBServiceParserRuleCall_0; }
		
		//BusinessService
		public RuleCall getBusinessServiceParserRuleCall_1() { return cBusinessServiceParserRuleCall_1; }
	}
	public class DBServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.DBService");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDbServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFeaturesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeaturesFeatureParserRuleCall_3_0 = (RuleCall)cFeaturesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//DBService:
		//	'dbService' name=ID '{'
		//	features+=Feature*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'dbService' name=ID '{' features+=Feature* '}'
		public Group getGroup() { return cGroup; }
		
		//'dbService'
		public Keyword getDbServiceKeyword_0() { return cDbServiceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//features+=Feature*
		public Assignment getFeaturesAssignment_3() { return cFeaturesAssignment_3; }
		
		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_3_0() { return cFeaturesFeatureParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class BusinessServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.BusinessService");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBusinessServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFeaturesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeaturesFeatureParserRuleCall_3_0 = (RuleCall)cFeaturesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//BusinessService:
		//	'businessService' name=ID '{'
		//	features+=Feature*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'businessService' name=ID '{' features+=Feature* '}'
		public Group getGroup() { return cGroup; }
		
		//'businessService'
		public Keyword getBusinessServiceKeyword_0() { return cBusinessServiceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//features+=Feature*
		public Assignment getFeaturesAssignment_3() { return cFeaturesAssignment_3; }
		
		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_3_0() { return cFeaturesFeatureParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperTypeEntityCrossReference_2_1_0 = (CrossReference)cSuperTypeAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperTypeEntityIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSuperTypeEntityCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFeaturesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFeaturesFeatureParserRuleCall_4_0 = (RuleCall)cFeaturesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Entity:
		//	'entity' name=ID ('extends' superType=[Entity])? '{'
		//	features+=Feature*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'entity' name=ID ('extends' superType=[Entity])? '{' features+=Feature* '}'
		public Group getGroup() { return cGroup; }
		
		//'entity'
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('extends' superType=[Entity])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }
		
		//superType=[Entity]
		public Assignment getSuperTypeAssignment_2_1() { return cSuperTypeAssignment_2_1; }
		
		//[Entity]
		public CrossReference getSuperTypeEntityCrossReference_2_1_0() { return cSuperTypeEntityCrossReference_2_1_0; }
		
		//ID
		public RuleCall getSuperTypeEntityIDTerminalRuleCall_2_1_0_1() { return cSuperTypeEntityIDTerminalRuleCall_2_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//features+=Feature*
		public Assignment getFeaturesAssignment_4() { return cFeaturesAssignment_4; }
		
		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_4_0() { return cFeaturesFeatureParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.Property");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAssignmentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAssignmentListParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCommaSeparatedAssignmentListParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEnvListParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Property:
		//	Assignment | AssignmentList | CommaSeparatedAssignmentList | EnvList;
		@Override public ParserRule getRule() { return rule; }
		
		//Assignment | AssignmentList | CommaSeparatedAssignmentList | EnvList
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Assignment
		public RuleCall getAssignmentParserRuleCall_0() { return cAssignmentParserRuleCall_0; }
		
		//AssignmentList
		public RuleCall getAssignmentListParserRuleCall_1() { return cAssignmentListParserRuleCall_1; }
		
		//CommaSeparatedAssignmentList
		public RuleCall getCommaSeparatedAssignmentListParserRuleCall_2() { return cCommaSeparatedAssignmentListParserRuleCall_2; }
		
		//EnvList
		public RuleCall getEnvListParserRuleCall_3() { return cEnvListParserRuleCall_3; }
	}
	public class EnvListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.EnvList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnvironmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEnvironmentVarsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEnvironmentVarsMYSTRINGTerminalRuleCall_2_0 = (RuleCall)cEnvironmentVarsAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//EnvList:
		//	'environment' '{' environmentVars+=MYSTRING+ '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'environment' '{' environmentVars+=MYSTRING+ '}'
		public Group getGroup() { return cGroup; }
		
		//'environment'
		public Keyword getEnvironmentKeyword_0() { return cEnvironmentKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//environmentVars+=MYSTRING+
		public Assignment getEnvironmentVarsAssignment_2() { return cEnvironmentVarsAssignment_2; }
		
		//MYSTRING
		public RuleCall getEnvironmentVarsMYSTRINGTerminalRuleCall_2_0() { return cEnvironmentVarsMYSTRINGTerminalRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class AssignmentListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.AssignmentList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAssignmentsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAssignmentsAssignmentParserRuleCall_2_0 = (RuleCall)cAssignmentsAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//AssignmentList:
		//	name=ID '{' assignments+=Assignment+ '}';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '{' assignments+=Assignment+ '}'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//assignments+=Assignment+
		public Assignment getAssignmentsAssignment_2() { return cAssignmentsAssignment_2; }
		
		//Assignment
		public RuleCall getAssignmentsAssignmentParserRuleCall_2_0() { return cAssignmentsAssignmentParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class CommaSeparatedAssignmentListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.CommaSeparatedAssignmentList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesValueParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//CommaSeparatedAssignmentList:
		//	name=ID '['
		//	value=Value (',' values+=Value)*
		//	']';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '[' value=Value (',' values+=Value)* ']'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//value=Value
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_0() { return cValueValueParserRuleCall_2_0; }
		
		//(',' values+=Value)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//values+=Value
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }
		
		//Value
		public RuleCall getValuesValueParserRuleCall_3_1_0() { return cValuesValueParserRuleCall_3_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}
	public class AssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.Assignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//Assignment:
		//	name=ID '=' value=Value;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '=' value=Value
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//value=Value
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_0() { return cValueValueParserRuleCall_2_0; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final Keyword cSolidusKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cHyphenMinusKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cFullStopKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		
		//Value:
		//	(STRING | ID | INT | '/' | ':' | '-' | '.')+;
		@Override public ParserRule getRule() { return rule; }
		
		//(STRING | ID | INT | '/' | ':' | '-' | '.')+
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
		
		//'/'
		public Keyword getSolidusKeyword_3() { return cSolidusKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_5() { return cHyphenMinusKeyword_5; }
		
		//'.'
		public Keyword getFullStopKeyword_6() { return cFullStopKeyword_6; }
	}
	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.Feature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeTypeCrossReference_2_0.eContents().get(1);
		
		////EString returns ecore::EString:
		////	STRING | ID;
		//Feature:
		//	name=ID ':' type=[Type];
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' type=[Type]
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//type=[Type]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[Type]
		public CrossReference getTypeTypeCrossReference_2_0() { return cTypeTypeCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_2_0_1() { return cTypeTypeIDTerminalRuleCall_2_0_1; }
	}
	
	
	private final DeploymentModelElements pDeploymentModel;
	private final TypeElements pType;
	private final DataTypeElements pDataType;
	private final PlatformTypeElements pPlatformType;
	private final DBTypeElements pDBType;
	private final DeploymentElements pDeployment;
	private final PlatformElements pPlatform;
	private final ClusterElements pCluster;
	private final ApplicationElements pApplication;
	private final ContainerElements pContainer;
	private final ServiceElements pService;
	private final DBServiceElements pDBService;
	private final BusinessServiceElements pBusinessService;
	private final EntityElements pEntity;
	private final PropertyElements pProperty;
	private final EnvListElements pEnvList;
	private final AssignmentListElements pAssignmentList;
	private final CommaSeparatedAssignmentListElements pCommaSeparatedAssignmentList;
	private final AssignmentElements pAssignment;
	private final ValueElements pValue;
	private final FeatureElements pFeature;
	private final TerminalRule tMYSTRING;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public TyphonDLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDeploymentModel = new DeploymentModelElements();
		this.pType = new TypeElements();
		this.pDataType = new DataTypeElements();
		this.pPlatformType = new PlatformTypeElements();
		this.pDBType = new DBTypeElements();
		this.pDeployment = new DeploymentElements();
		this.pPlatform = new PlatformElements();
		this.pCluster = new ClusterElements();
		this.pApplication = new ApplicationElements();
		this.pContainer = new ContainerElements();
		this.pService = new ServiceElements();
		this.pDBService = new DBServiceElements();
		this.pBusinessService = new BusinessServiceElements();
		this.pEntity = new EntityElements();
		this.pProperty = new PropertyElements();
		this.pEnvList = new EnvListElements();
		this.pAssignmentList = new AssignmentListElements();
		this.pCommaSeparatedAssignmentList = new CommaSeparatedAssignmentListElements();
		this.pAssignment = new AssignmentElements();
		this.pValue = new ValueElements();
		this.pFeature = new FeatureElements();
		this.tMYSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.typhon.dsls.xtext.TyphonDL.MYSTRING");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.typhon.dsls.xtext.TyphonDL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//DeploymentModel:
	//	elements+=Type*;
	public DeploymentModelElements getDeploymentModelAccess() {
		return pDeploymentModel;
	}
	
	public ParserRule getDeploymentModelRule() {
		return getDeploymentModelAccess().getRule();
	}
	
	//Type:
	//	PlatformType | DataType | Deployment | DBType | Entity;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//DataType:
	//	'datatype' name=ID;
	public DataTypeElements getDataTypeAccess() {
		return pDataType;
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}
	
	//PlatformType:
	//	'platformtype' name=ID;
	public PlatformTypeElements getPlatformTypeAccess() {
		return pPlatformType;
	}
	
	public ParserRule getPlatformTypeRule() {
		return getPlatformTypeAccess().getRule();
	}
	
	//DBType:
	//	'dbtype' name=ID;
	public DBTypeElements getDBTypeAccess() {
		return pDBType;
	}
	
	public ParserRule getDBTypeRule() {
		return getDBTypeAccess().getRule();
	}
	
	//Deployment:
	//	Platform | Cluster | Application | Container | Service;
	public DeploymentElements getDeploymentAccess() {
		return pDeployment;
	}
	
	public ParserRule getDeploymentRule() {
		return getDeploymentAccess().getRule();
	}
	
	//Platform:
	//	{Platform}
	//	'platform' name=ID ':' type=[PlatformType] '{'
	//	//(features+=Feature)*
	//	clusters+=Cluster*
	//	'}';
	public PlatformElements getPlatformAccess() {
		return pPlatform;
	}
	
	public ParserRule getPlatformRule() {
		return getPlatformAccess().getRule();
	}
	
	//Cluster:
	//	{Cluster}
	//	'cluster' name=ID '{'
	//	//(features+=Feature)*
	//	applications+=Application*
	//	'}';
	public ClusterElements getClusterAccess() {
		return pCluster;
	}
	
	public ParserRule getClusterRule() {
		return getClusterAccess().getRule();
	}
	
	//Application:
	//	{Application}
	//	'application' name=ID '{'
	//	containers+=Container*
	//	'}';
	public ApplicationElements getApplicationAccess() {
		return pApplication;
	}
	
	public ParserRule getApplicationRule() {
		return getApplicationAccess().getRule();
	}
	
	//Container:
	//	{Container}
	//	'container' name=ID '{' (properties+=Property | features+=Feature)*
	//	//(services+=Service)*
	//	'}';
	public ContainerElements getContainerAccess() {
		return pContainer;
	}
	
	public ParserRule getContainerRule() {
		return getContainerAccess().getRule();
	}
	
	//Service:
	//	DBService | BusinessService;
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}
	
	//DBService:
	//	'dbService' name=ID '{'
	//	features+=Feature*
	//	'}';
	public DBServiceElements getDBServiceAccess() {
		return pDBService;
	}
	
	public ParserRule getDBServiceRule() {
		return getDBServiceAccess().getRule();
	}
	
	//BusinessService:
	//	'businessService' name=ID '{'
	//	features+=Feature*
	//	'}';
	public BusinessServiceElements getBusinessServiceAccess() {
		return pBusinessService;
	}
	
	public ParserRule getBusinessServiceRule() {
		return getBusinessServiceAccess().getRule();
	}
	
	//Entity:
	//	'entity' name=ID ('extends' superType=[Entity])? '{'
	//	features+=Feature*
	//	'}';
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//Property:
	//	Assignment | AssignmentList | CommaSeparatedAssignmentList | EnvList;
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}
	
	//EnvList:
	//	'environment' '{' environmentVars+=MYSTRING+ '}';
	public EnvListElements getEnvListAccess() {
		return pEnvList;
	}
	
	public ParserRule getEnvListRule() {
		return getEnvListAccess().getRule();
	}
	
	//AssignmentList:
	//	name=ID '{' assignments+=Assignment+ '}';
	public AssignmentListElements getAssignmentListAccess() {
		return pAssignmentList;
	}
	
	public ParserRule getAssignmentListRule() {
		return getAssignmentListAccess().getRule();
	}
	
	//CommaSeparatedAssignmentList:
	//	name=ID '['
	//	value=Value (',' values+=Value)*
	//	']';
	public CommaSeparatedAssignmentListElements getCommaSeparatedAssignmentListAccess() {
		return pCommaSeparatedAssignmentList;
	}
	
	public ParserRule getCommaSeparatedAssignmentListRule() {
		return getCommaSeparatedAssignmentListAccess().getRule();
	}
	
	//Assignment:
	//	name=ID '=' value=Value;
	public AssignmentElements getAssignmentAccess() {
		return pAssignment;
	}
	
	public ParserRule getAssignmentRule() {
		return getAssignmentAccess().getRule();
	}
	
	//Value:
	//	(STRING | ID | INT | '/' | ':' | '-' | '.')+;
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	////EString returns ecore::EString:
	////	STRING | ID;
	//Feature:
	//	name=ID ':' type=[Type];
	public FeatureElements getFeatureAccess() {
		return pFeature;
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}
	
	//terminal MYSTRING:
	//	'"' 'A'..'Z' ('a'..'z' | 'A'..'Z' | '_' | '0'..'9' | '=')* '"';
	public TerminalRule getMYSTRINGRule() {
		return tMYSTRING;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
