grammar de.atb.typhondl.xtext.TyphonDL with org.eclipse.xtext.common.Terminals

//import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate typhonDL "http://www.typhon.org/dsls/xtext/TyphonDL"

DeploymentModel:
	(guiMetaInformation+=MetaModel)*
	(elements+=Model)*;

MetaModel:
	Import;

Model:
	Platform | Type | Services;

Import:
	'import' relativePath=Value;

Services:
	DB | Software;

Software:
	(external?='external')? 'software' name=Name '{'
	(image=IMAGE)
	(parameters+=Property)*
	'}';

Type:
	PlatformType | ClusterType | ContainerType | DBType;

DB:
	(external?='external')? 'database' name=Name ':' type=[DBType] '{'
	(image=IMAGE)?
	(parameters+=Property)*
	'}';

PlatformType:
	'platformtype' name=Name;

ClusterType:
	'clustertype' name=Name;

ContainerType:
	'containertype' name=Name;

DBType:
	'dbtype' name=Name '{'
	'default' (image=IMAGE)
	(images+=IMAGE)*
	'}';

IMAGE:
	'image' '=' value=Value ';';

Platform:
	{Platform}
	'platform' name=Name ':' type=[PlatformType] '{'
	(clusters+=Cluster)+
	'}';

Cluster:
	{Cluster}
	'cluster' name=Name ':' type=[ClusterType] '{'
	(networks+=Cluster_Network)*
	(properties+=Property)*
	(applications+=Application)*
	'}';

Cluster_Network:
	'network' name=ID
	('{'
	(key_values+=Key_Values)*
	'}')?;

Container_Network:
	'networks' references+=[Cluster_Network] (',' references+=[Cluster_Network])*;

Application:
	{Application}
	'application' name=Name '{'
	(containers+=Container)*
	'}';

Container:
	{Container}
	(external?='external')? 'container' name=Name ':' (type=[ContainerType])? '{'
	(deploys=Reference)?
	(depends_on+=Dependency)*
	(networks=Container_Network)?
	(ports=Ports)?
	(properties+=Property)*
	'}';

Ports:
	{Ports}
	'ports' '{'
	(key_values+=Key_Values)+
	'}';

Dependency:
	'depends_on' reference=[Container];

Reference:
	'deploys' reference=[Services];

Property:
	Key_Values | Key_ValueArray | Key_KeyValueList;

Key_Values:
	name=ID '=' value=Value (',' values+=Value)* ';';

Key_KeyValueList:
	name=ID '{' (properties+=Property)+ '}';

Key_ValueArray:
	name=ID ('[')
	(values+=Value) (',' values+=Value)*
	(']');
		
Value:
	(STRING | ID | INT | '-' | '.' | '=' | '/' | ':' | '//')+;

Name:
	(STRING | ID | INT | '-')+;

@Override
terminal SL_COMMENT:
	'#' !('\n' | '\r')* ('\r'? '\n')?;